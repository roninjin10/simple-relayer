/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IDisputeGameFactory,
  IDisputeGameFactoryInterface,
} from "../../../contracts/dispute/IDisputeGameFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "disputeProxy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum GameType",
        name: "gameType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "Claim",
        name: "rootClaim",
        type: "bytes32",
      },
    ],
    name: "DisputeGameCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "impl",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum GameType",
        name: "gameType",
        type: "uint8",
      },
    ],
    name: "ImplementationSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum GameType",
        name: "gameType",
        type: "uint8",
      },
      {
        internalType: "Claim",
        name: "rootClaim",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "contract IDisputeGame",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum GameType",
        name: "gameType",
        type: "uint8",
      },
    ],
    name: "gameImpls",
    outputs: [
      {
        internalType: "contract IDisputeGame",
        name: "_impl",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum GameType",
        name: "gameType",
        type: "uint8",
      },
      {
        internalType: "Claim",
        name: "rootClaim",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "games",
    outputs: [
      {
        internalType: "contract IDisputeGame",
        name: "_proxy",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum GameType",
        name: "gameType",
        type: "uint8",
      },
      {
        internalType: "contract IDisputeGame",
        name: "impl",
        type: "address",
      },
    ],
    name: "setImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IDisputeGameFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IDisputeGameFactoryInterface {
    return new utils.Interface(_abi) as IDisputeGameFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDisputeGameFactory {
    return new Contract(address, _abi, signerOrProvider) as IDisputeGameFactory;
  }
}
